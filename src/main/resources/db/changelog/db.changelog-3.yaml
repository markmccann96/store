databaseChangeLog:
  # Set quoting strategy as an attribute (not a property)
  - objectQuotingStrategy: QUOTE_ONLY_RESERVED_WORDS

  # 1) Add timestamp columns with DB defaults
  - changeSet:
      id: 20250905-01-order-timestamps
      author: store
      changes:
        - addColumn:
            schemaName: public
            tableName: order
            columns:
              - column:
                  name: created_at
                  type: TIMESTAMPTZ
                  defaultValueComputed: now()
                  constraints:
                    nullable: false
              - column:
                  name: updated_at
                  type: TIMESTAMPTZ
                  defaultValueComputed: now()
                  constraints:
                    nullable: false
      rollback:
        - dropColumn:
            schemaName: public
            tableName: order
            columnName: created_at
        - dropColumn:
            schemaName: public
            tableName: order
            columnName: updated_at

  # 2) Trigger function + trigger to keep updated_at fresh on UPDATE
  - changeSet:
      id: 20250905-02-order-updated-at-trigger
      author: store
      preConditions:
        - dbms:
            type: postgresql
      changes:
        - sql:
            comment: Create trigger function to set updated_at
            splitStatements: false
            stripComments: true
            sql: |
              CREATE OR REPLACE FUNCTION public.trg_set_order_updated_at()
              RETURNS trigger
              LANGUAGE plpgsql
              AS $$
              BEGIN
                NEW.updated_at := now();
                RETURN NEW;
              END;
              $$;
        - sql:
            comment: Create trigger on public."order"
            splitStatements: false
            stripComments: true
            sql: |
              DROP TRIGGER IF EXISTS set_order_updated_at ON public."order";
              CREATE TRIGGER set_order_updated_at
              BEFORE UPDATE ON public."order"
              FOR EACH ROW
              EXECUTE FUNCTION public.trg_set_order_updated_at();
      rollback:
        - sql:
            splitStatements: true
            sql: |
              DROP TRIGGER IF EXISTS set_order_updated_at ON public."order";
              DROP FUNCTION IF EXISTS public.trg_set_order_updated_at();

  # 3) Indexes to support ORDER BY and snapshot queries
  - changeSet:
      id: 20250905-03-order-indexes
      author: store
      changes:
        - createIndex:
            schemaName: public
            indexName: idx_order_created_at_id
            tableName: order
            columns:
              - column:
                  name: created_at
                  descending: true
              - column:
                  name: id
                  descending: true
        - createIndex:
            schemaName: public
            indexName: idx_order_updated_at
            tableName: order
            columns:
              - column:
                  name: updated_at
      rollback:
        - dropIndex:
            schemaName: public
            indexName: idx_order_created_at_id
            tableName: order
        - dropIndex:
            schemaName: public
            indexName: idx_order_updated_at
            tableName: order
