name: CI

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]
  workflow_dispatch:

env:
  APP_DIR: .
  JAVA_VERSION: '17'
  IMAGE_REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

permissions:
  contents: read
  packages: write  # needed for GHCR push

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test-and-image:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.APP_DIR }}

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v3

      - name: Set up Temurin JDK
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build & test
        run: ./gradlew --no-daemon clean test

      - name: Build bootJar
        run: ./gradlew --no-daemon bootJar

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: ${{ env.APP_DIR }}/build/libs/*.jar
          if-no-files-found: error
          retention-days: 7

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build & (conditionally) push image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ env.APP_DIR }}/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            JAVA_VERSION=${{ env.JAVA_VERSION }}
